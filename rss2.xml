<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>lululu&#39;s  Blog</title>
    <link>http://ludejian.top/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 22 Dec 2018 16:24:47 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>angular启动</title>
      <link>http://ludejian.top/angular%E5%90%AF%E5%8A%A8.html</link>
      <guid>http://ludejian.top/angular%E5%90%AF%E5%8A%A8.html</guid>
      <pubDate>Sat, 22 Dec 2018 15:40:40 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;Angular文件结构&quot;&gt;&lt;a href=&quot;#Angular文件结构&quot; class=&quot;headerlink&quot; title=&quot;Angular文件结构&quot;&gt;&lt;/a&gt;Angular文件结构&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;以Angular/cli创建的项目目录为例
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="Angular文件结构"><a href="#Angular文件结构" class="headerlink" title="Angular文件结构"></a>Angular文件结构</h2><blockquote><p>以Angular/cli创建的项目目录为例。</p><ul><li>e2e文件             端对端测试。</li><li>src                 主要的开发代码的存放位置。</li><li>angular.json        angular-cli 配置。</li><li>karma.conf.js       单元测试文件。</li><li>package.json        npm包管理配置。</li><li>Protractor.conf.js  是测试的相关文件</li><li>README.md           cli说明。</li><li>Tsconfig.json       Typescript配置。</li><li>Tslint.json         Typescript代码格式校验文件。</li></ul></blockquote><h3 id="SRC目录下结构："><a href="#SRC目录下结构：" class="headerlink" title="SRC目录下结构："></a>SRC目录下结构：</h3><blockquote><ul><li>app 根模块、根组件。</li><li>assets 放图片、字体文件等等。</li><li>environments 配置环境。生产环境、开发环境、测试环境、</li><li>index.html  单页应用的唯一页面。</li><li>main.ts 整个项目的入口脚本。</li><li>polyfills.ts  兼容老版本的浏览器。</li><li>styles.css 全局样式配置。</li><li>test.ts  测试用例的ts。</li></ul></blockquote><h3 id="源码结构分析："><a href="#源码结构分析：" class="headerlink" title="源码结构分析："></a>源码结构分析：</h3><blockquote><ul><li>@angular/core 存放核心代码，如变化监测机制、依赖注入机制、渲染等，核心功能的实现，装饰器也会存放到这个模块。</li><li>@angular/common: 存放一些常用的内置指令和内置管道等。</li><li>@angular/forms：存放表单相关内置组件与指令。</li><li>@angular/http：存放网络请求相关的服务等。</li><li>@angular/router: 存放路由相关。</li><li>@angular/platform-<x>: 存放引导启动相关工具。</x></li></ul></blockquote><h3 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h3><blockquote><p>1、    在main.ts中platformBrowserDynamic 是动态引导项目加载。会把项目指引到AppModule中去。<br>2、    AppModule中的bootstrap元数据，会指定模块的根组件也就是 app.component.ts<br>3、    根组件暴露出 select选择器为app-root。而index.html中加载了<app-root></app-root>标签。从而实现了页面的显示。</p></blockquote>]]></content:encoded>
      
      <comments>http://ludejian.top/angular%E5%90%AF%E5%8A%A8.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://ludejian.top/hello-world.html</link>
      <guid>http://ludejian.top/hello-world.html</guid>
      <pubDate>Fri, 05 Oct 2018 15:21:33 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt; 国际惯例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p> 国际惯例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world!</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://ludejian.top/hello-world.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>傻傻分不清楚 slice/splice/split</title>
      <link>http://ludejian.top/%E5%82%BB%E5%82%BB%E5%88%86%E4%B8%8D%E6%B8%85.html</link>
      <guid>http://ludejian.top/%E5%82%BB%E5%82%BB%E5%88%86%E4%B8%8D%E6%B8%85.html</guid>
      <pubDate>Mon, 09 Jul 2018 01:36:49 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;slice&quot;&gt;&lt;a href=&quot;#slice&quot; class=&quot;headerlink&quot; title=&quot;slice&quot;&gt;&lt;/a&gt;slice&lt;/h3&gt;&lt;p&gt;slice:    不会修改原来的数组，截取数组元素返回&lt;br&gt;&lt;figure class=&quot;highlight p
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h3><p>slice:    不会修改原来的数组，截取数组元素返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var fruits = [&apos;Banana&apos;, &apos;Orange&apos;, &apos;Lemon&apos;, &apos;Apple&apos;, &apos;Mango&apos;];</span><br><span class="line">var citrus = fruits.slice(1, 3);</span><br><span class="line"></span><br><span class="line">// fruits contains [&apos;Banana&apos;, &apos;Orange&apos;, &apos;Lemon&apos;, &apos;Apple&apos;, &apos;Mango&apos;]</span><br><span class="line">// citrus contains [&apos;Orange&apos;,&apos;Lemon&apos;]</span><br></pre></td></tr></table></figure></p><h3 id="splice"><a href="#splice" class="headerlink" title="splice"></a>splice</h3><p>splice:    直接修改原数组，删除原数组中的指定元素，返回的是被删除的元素组成的数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var myFish = [&apos;angel&apos;, &apos;clown&apos;, &apos;drum&apos;, &apos;mandarin&apos;, &apos;sturgeon&apos;];</span><br><span class="line">var removed = myFish.splice(3, 1);</span><br><span class="line">//运算后的myFish：[&quot;angel&quot;, &quot;clown&quot;, &quot;drum&quot;, &quot;sturgeon&quot;]</span><br><span class="line">//被删除元素数组：[&quot;mandarin&quot;]</span><br></pre></td></tr></table></figure></p><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><p>split:    根据特定的字符切割字符串并且返回生成的数组,当字符串为空时，split（）返回一个包含一个空字符串的数组，而不是一个空数组，如果字符串和分隔符都是空字符串，则返回一个空数组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;Webkit Moz O ms Khtml&quot;.split( &quot; &quot; )   </span><br><span class="line">// [&quot;Webkit&quot;, &quot;Moz&quot;, &quot;O&quot;, &quot;ms&quot;, &quot;Khtml&quot;]</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>http://ludejian.top/%E5%82%BB%E5%82%BB%E5%88%86%E4%B8%8D%E6%B8%85.html#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
